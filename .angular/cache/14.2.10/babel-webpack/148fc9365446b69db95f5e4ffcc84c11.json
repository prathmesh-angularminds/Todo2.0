{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let TodoserviceService = /*#__PURE__*/(() => {\n  class TodoserviceService {\n    constructor() {\n      // Local Storage Variables\n      this.lStorage = localStorage;\n\n      if (this.lStorage.getItem(\"allTask\") === null) {\n        this.lStorage.setItem(\"allTask\", JSON.stringify([]));\n        this.allTask = JSON.parse(this.lStorage.getItem(\"allTask\"));\n      } else {\n        this.allTask = JSON.parse(this.lStorage.getItem(\"allTask\"));\n      }\n\n      if (this.lStorage.getItem(\"completedTask\") === null) {\n        this.lStorage.setItem(\"completedTask\", JSON.stringify([]));\n        this.completedTask = JSON.parse(this.lStorage.getItem(\"completedTask\"));\n      } else {\n        this.completedTask = JSON.parse(this.lStorage.getItem(\"completedTask\"));\n      }\n\n      if (this.lStorage.getItem(\"deletedTask\") === null) {\n        this.lStorage.setItem(\"deletedTask\", JSON.stringify([]));\n        this.deletedTask = JSON.parse(this.lStorage.getItem(\"deletedTask\"));\n      } else {\n        this.deletedTask = JSON.parse(this.lStorage.getItem(\"deletedTask\"));\n      }\n    } // Sorting Data\n\n\n    sortData(taskList, newTask) {\n      var newTaskList = [];\n      var hrs1;\n      var hrs2;\n      var index = -1;\n      var mins1;\n      var mins2;\n\n      if (taskList.length === 0) {\n        newTaskList.push(newTask);\n      } else {\n        for (var i = 0; i < taskList.length; i++) {\n          hrs1 = parseInt(taskList[i].startTime.charAt(0) + taskList[i].startTime.charAt(1));\n          hrs2 = parseInt(newTask.startTime.charAt(0) + newTask.startTime.charAt(1));\n          mins1 = parseInt(taskList[i].startTime.charAt(3) + taskList[i].startTime.charAt(4));\n          mins2 = parseInt(newTask.startTime.charAt(3) + newTask.startTime.charAt(4));\n\n          if (hrs1 > hrs2) {\n            newTaskList.push(newTask);\n            index = i;\n            break;\n          } else if (hrs1 < hrs2) {\n            newTaskList.push(taskList[i]);\n            index = -1;\n            continue;\n          } else if (hrs1 == hrs2) {\n            if (mins1 >= mins2) {\n              newTaskList.push(newTask);\n              index = i;\n              break;\n            } else {\n              newTaskList.push(taskList[i]);\n              index = -1;\n              continue;\n            }\n          }\n\n          newTaskList.push(taskList[i]);\n        }\n\n        if (index === -1) {\n          newTaskList.push(newTask);\n        } else {\n          for (var i = index; i < taskList.length; i++) {\n            newTaskList.push(taskList[i]);\n          }\n        }\n      }\n\n      return newTaskList;\n    } // add new task in normal list or important list\n\n\n    addNewTask(newTask) {\n      this.lStorage.setItem(\"allTask\", JSON.stringify(this.sortData(this.allTask, newTask)));\n      this.allTask = JSON.parse(this.lStorage.getItem(\"allTask\"));\n      console.log(this.allTask);\n    } // function which deleted specified task from the list\n\n\n    deleteTask(task, arrayType, deletedTask) {\n      if (arrayType === \"all\") {\n        this.lStorage.setItem(\"allTask\", JSON.stringify(task));\n        this.allTask = JSON.parse(this.lStorage.getItem(\"allTask\"));\n      } else if (arrayType === \"completed\") {\n        this.lStorage.setItem(\"completedTask\", JSON.stringify(task));\n        this.completedTask = JSON.parse(this.lStorage.getItem(\"completedTask\"));\n      }\n\n      this.deletedTask.push(deletedTask);\n      this.lStorage.setItem(\"deletedTask\", JSON.stringify(this.deletedTask));\n      this.deletedTask = JSON.parse(this.lStorage.getItem(\"deletedTask\"));\n    } // Function which deleted all task from specified task list\n\n\n    allTaskDelete(arrayType) {\n      if (arrayType === \"all\") {\n        this.lStorage.setItem(\"allTask\", JSON.stringify([]));\n        this.allTask = JSON.parse(this.lStorage.getItem(\"allTask\"));\n      } else if (arrayType === \"delete\") {\n        this.lStorage.setItem(\"deletedTask\", JSON.stringify([]));\n        this.deletedTask = JSON.parse(this.lStorage.getItem(\"deletedTask\"));\n      } else if (arrayType === \"completed\") {\n        this.lStorage.setItem(\"completedTask\", JSON.stringify([]));\n        this.completedTask = JSON.parse(this.lStorage.getItem(\"completedTask\"));\n      }\n    }\n\n    addToCompleted(newTask) {\n      this.completedTask.push(newTask);\n      this.lStorage.setItem(\"completedTask\", JSON.stringify(this.completedTask));\n      this.completedTask = JSON.parse(this.lStorage.getItem(\"completedTask\"));\n      console.log(this.completedTask);\n    }\n\n  }\n\n  TodoserviceService.ɵfac = function TodoserviceService_Factory(t) {\n    return new (t || TodoserviceService)();\n  };\n\n  TodoserviceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TodoserviceService,\n    factory: TodoserviceService.ɵfac,\n    providedIn: \"root\"\n  });\n  return TodoserviceService;\n})();","map":null,"metadata":{},"sourceType":"module"}